/*! \page control Control Flow of Decom
 *
<pre>
\section con1 GUI Interaction
 * -BackEnd serves as the interface between Qt and the rest of the code.
 * -User selects a folder containing their data, then h5Decode or pdsDecode is used to get a listing of potential candidates for Decom.
 * -User is prompted to make selections from these candidates.
 * -Users is prompted to make selections for APID filtering.
 * -Once complete, we load the databases the describe data locations using DatabaseReader
 * -Then, h5Decode or pdsDecode runs.
 \section con2 Decom
 *      h5Decode or pdsDecode:
 *               -Starts a thread to run the Decom class and passes it a ThreadSafeQueue.
 *               -Reads each file from the selected directory (matching user candidates) and passes a vector to the queue mentioned previously.
 *               -Once done reading/passing all files, waits for signal from Decom thread that it has also finished.
 *      Decom:
 *               -Pulls byte-vectors from queue until the queue is empty.
 *               -For each vector, loops until reaching the end of the vector.
 *               -On each iteration headers are decoded HeaderDecode.
 *               -Then, using that information (APID/Length) from headers, we DataDecode.
 *               -If the packet is segmented, DataDecode may loop several times and call HeaderDecode on its own.
 *               -Once done, a DataTypes::Packet is pushed into ThreadPoolServer's Map of ThreadSafeQueue.
 *      ThreadPoolServer:
 *               -When a packet is passed, it is pushed into the corresponding ThreadSafeQueue.
 *               -From there, the corresponding thread (based on APID) pull its from the queue and writes it to CSV.
 *               -Threads continue listening on the queue until, the main thread (Decom) joins them.
 *      Post-Processing:
 *               -At this point we are done parsing and writing all packets.
 *               -If we parsed science data that needs special formatting it is done now. (InstrumentFormat)
 *      Completition:
 *               -At this point, the Decom thread notifies BackEnd and the user is notifed that the %decom has completed.
</pre>
*/
